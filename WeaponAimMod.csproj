<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{65925866-F773-46B0-93EE-E2898859040B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>WeaponAimMod</RootNamespace>
    <AssemblyName>WeaponAimMod</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="0Harmony">
      <HintPath>..\..\..\Steam\steamapps\common\TerraTech\TerraTechWin64_Data\Managed\0Harmony.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="0Nuterra.NativeOptions">
      <HintPath>..\Nuterra.NativeOptions\Nuterra.NativeOptions\bin\0Nuterra.NativeOptions\0Nuterra.NativeOptions.dll</HintPath>
    </Reference>
    <Reference Include="Assembly-CSharp">
      <HintPath>..\..\..\Steam\steamapps\common\TerraTech\TerraTechWin64_Data\Managed\Assembly-CSharp.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="ConfigHelper">
      <HintPath>..\ConfigHelper\bin\Debug\ConfigHelper.dll</HintPath>
    </Reference>
    <Reference Include="DebugWrapper">
      <HintPath>..\..\..\Steam\steamapps\common\TerraTech\TerraTechWin64_Data\Managed\DebugWrapper.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="NLog, Version=4.0.0.0, Culture=neutral, PublicKeyToken=5120e14c03d0593c, processorArchitecture=MSIL">
      <HintPath>packages\NLog.4.7.11\lib\net45\NLog.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Core" />
    <Reference Include="System.IO.Compression" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.ServiceModel" />
    <Reference Include="System.Transactions" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
    <Reference Include="UnityEngine">
      <HintPath>..\..\..\Steam\steamapps\common\TerraTech\TerraTechWin64_Data\Managed\UnityEngine.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>..\..\..\Steam\steamapps\common\TerraTech\TerraTechWin64_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.Networking">
      <HintPath>..\..\..\Steam\steamapps\common\TerraTech\TerraTechWin64_Data\Managed\UnityEngine.Networking.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.PhysicsModule">
      <HintPath>..\..\..\Steam\steamapps\common\TerraTech\TerraTechWin64_Data\Managed\UnityEngine.PhysicsModule.dll</HintPath>
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="src\AccurateExplosionSpawnPatch.cs" />
    <Compile Include="src\AutoSetFusePatch.cs" />
    <Compile Include="src\BallisticEquations.cs" />
    <Compile Include="src\IngressPoint.cs" />
    <Compile Include="src\ListExtensions.cs" />
    <Compile Include="src\MissilePatch.cs" />
    <Compile Include="src\Patches.cs" />
    <Compile Include="src\ProjectilePatch.cs" />
    <Compile Include="src\OctantVision.cs" />
    <Compile Include="src\SmartMissile.cs" />
    <Compile Include="src\TargetManager.cs" />
    <Compile Include="src\TimedFuseData.cs" />
    <Compile Include="WeaponAimMod.cs" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Properties\" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\TechComponentInjector\TechComponentInjector\TechComponentInjector.csproj">
      <Project>{50a84443-8e82-4060-b2ca-2aa653724548}</Project>
      <Name>TechComponentInjector</Name>
      <Private>True</Private>
    </ProjectReference>
    <ProjectReference Include="..\TerraTechModLoader\LogManager\LogManager.csproj">
      <Project>{911eed8c-e525-4596-84e7-11be2a401523}</Project>
      <Name>LogManager</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEvent>del *.pdb
@setlocal enableextensions enabledelayedexpansion

set modname=Weapon Aim Mod
set modpath="E:\Steam\steamapps\common\TerraTech\LocalMods\%25modname%25\"
set unitypath="E:\Documents\Unity\Projects\TT Modding\Assets\Mods\%25modname%25\"
echo !modpath!

for %25%25I in (*) do (
  if not "%25%25I" =="$(TargetFileName)" (
    if not "%25%25I" == "LogManager.dll" (
      del "%25%25I"
    )
  )
)

if not exist !modpath! (
echo Creating mod folder
mkdir !modpath!
)

set e=$(TargetDir)..\&gt;nul

echo Copying to game
xcopy /S /Y /R "$(TargetFileName)" !modpath!
if not "$(TargetFileName)" == "LogManager.dll" (
  xcopy /S /Y /R "LogManager.dll" !modpath!
)

echo Copying to Unity
xcopy /S /Y /R "$(TargetFileName)" !unitypath!
if not "$(TargetFileName)" == "LogManager.dll" (
  xcopy /S /Y /R "LogManager.dll" !unitypath!
)

if not "$(TargetFileName)" == "LogManager.dll" (
  del "LogManager.dll"
)</PostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>